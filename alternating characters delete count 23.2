
question-->>
You are given a string containing characters A and B only. Your task is to change it into a string such that there are no matching adjacent characters. To do this, you are allowed to delete zero or more characters in the string.

Your task is to find the minimum number of required deletions.

Example

s = AABAAB

Remove an A at positions 0 and 3 to make s = ABAB in 2 deletions.

Function Description

Complete the alternatingCharacters function in the editor.

alternatingCharacters has the following parameter(s):

string s: a string
Returns

int: the minimum number of deletions required
Input Format

The first line contains an integer q, the number of queries.
The next q lines each contain a string s to analyze.


Sample Input:


5
AAAA
BBBBB
ABABABAB
BABABA
AAABBB
Sample Output:

3
4
0
0
4

import java.util.Scanner;
class Solution
{
    private static void alternatingCharacters(String s){
        String r=" ";
        int count=0;
        for(int i=0;i<s.length()-1;i++)
        {
            if(s.charAt(i)==s.charAt(i+1))
            {
               r=r+s.charAt(i+1);
               count++;
            }
            else
            r=r+s.charAt(i);
        }
        System.out.println(count);
        
    }
    public static void main(String[] args)
    {
        Scanner scan = new Scanner(System.in);
        int t=scan.nextInt();
        for(int i=0;i<t;i++)
        {
            String s=scan.next();
            alternatingCharacters(s);
        }
        
    }
}
