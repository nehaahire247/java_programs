There is a string, s of lowercase English letters that is repeated infinitely many times. Given an integer, n find and print the number of letter a's in the first n letters of the infinite string.

Example

s = "abcac"

n=10

The substring we consider is abcacabcac the first 10 characters of the infinite string. There are  occurrences of a in the substring.

Input Format

The first line contains a single string, s
The second line contains an integer, n



Sample Input 0:

aba

10

Sample Output 0:

7

Explanation 0
The first n =10 letters of the infinite string are abaabaabaa. Because there are 7 a's, we return .


Sample Input 1:

a

1000000000000

Sample Output 1:

1000000000000

Explanation 1
Because all of the first n=1000000000000 letters of the infinite string are a, we return 1000000000000


import java.util.Scanner;
class Solution{
  public static long repeatedString(String s, long n) {

    long strLength = s.length();

    // Count the number of 'a' in the given string
    int count = 0;
    for (int i = 0; i < strLength; i++) {
      if (s.charAt(i) == 'a') {
        ++count;
      }
    }

    long repeatedTimes = n / strLength;

    // Find the length of string left after repetitions
    long stringLeftLength = n - (strLength * repeatedTimes);

    // Count the remaining repetitions
    int extra = 0;
    for (int i = 0; i < stringLeftLength; i++) {
      if (s.charAt(i) == 'a') {
        ++extra;
      }
    }

    long totalCount = (repeatedTimes * count) + extra;

    return totalCount;
  }

    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        String s=scan.nextLine();
        long n=scan.nextLong();
        long t=repeatedString(s,n);
        System.out.println(t);
    }
}
