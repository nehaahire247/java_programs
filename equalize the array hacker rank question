Delete the 2 elements 1 and 3 leaving arr = [2, 2]. If both twos plus either the 1 or the 3 are deleted, it takes 3deletions to leave either [3] or [1]. The minimum number of deletions is 2.

Function Description

Complete the equalizeArray function in the editor below.

equalizeArray has the following parameter(s):

int arr[n]: An array of integers
Returns

int: the minimum number of deletions required
Input Format

The first line contains an integer n, the number of elements in arr.
The next line contains n space-separated integers arr[i].


Sample Input:

5

3 3 2 1 3

Sample Output:

2

import java.util.Scanner;
class Solution{
    public static int equalizeArray(int a[]){
        int b[]=new int[101];
        for(int i=0;i<a.length;i++)
        {   int index=a[i];
            b[index]++;
        }
        int max=0;
        for(int i=0;i<101;i++)
        {
           if(b[i]>max)
           max=b[i];
        }
        return (a.length-max);
    }
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int n=scan.nextInt();
        int a[]=new int[n];
        for(int i=0;i<a.length;i++)
        {
            a[i]=scan.nextInt();
        }
        System.out.println(equalizeArray(a));
    }
}
